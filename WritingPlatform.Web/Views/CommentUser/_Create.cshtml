@model WritingPlatform.Web.Models.CommentUserViewModel

@using (Ajax.BeginForm("_Create", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "commentsList" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Добавить комментарий</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CommentsText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.CommentsText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommentsText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@*@using(Html.BeginForm())
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal">

            <div class="form-group">
                <h4>Добавить комментарий</h4>

                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.CommentsText, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommentsText, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Добавить" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@
