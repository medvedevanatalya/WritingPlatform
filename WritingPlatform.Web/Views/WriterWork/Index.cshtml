@{
    ViewBag.Title = "Произведения";

    List<WritingPlatform.Web.Models.UserViewModel> users = ViewBag.Users;
    List<WritingPlatform.Web.Models.GenreViewModel> genres = ViewBag.Genres;
}

<h2>Произведения</h2>

@Html.ActionLink("Создать произведение", "CreateAndEdit", "WriterWork")

@*<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Название</th>
            <th scope="col">Жанр</th>
            <th scope="col">Автор</th>
            <th scope="col">Дата публикации</th>
            <th scope="col">Текст произведения</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ViewBag.WritersWorks)
        {

            string loginUser = users.Where(u => u.Id == item.UserId).First().LoginUser;
            string nameGenre = genres.Where(u => u.Id == item.GenreId).First().NameGenre;
            string titleWork = item.TitleWork;
        <tr>
            <td scope="row">@Html.ActionLink(titleWork, "WriterWorkPage", "WriterWork", new { id = item.Id }, null)</td>
            <td scope="row">@nameGenre</td>
            <td scope="row">@loginUser</td>
            <td scope="row">@item.PublicationDate.ToShortDateString()</td>
            <td scope="row">@item.WriterWorkText</td>
            @if (User.Identity.IsAuthenticated)
            {
                int currentUserId = users.Where(u => u.LoginUser == User.Identity.Name).First().Id;

                if (item.UserId == currentUserId)
                {
                    <td scope="row">@Html.ActionLink("Редактировать произведение", "CreateAndEdit", "WriterWork", new { id = @item.Id }, null)</td>
                    <td scope="row">@Html.ActionLink("Удалить произведение", "Delete", "WriterWork", new { id = @item.Id }, null)</td>
                }
            }
        </tr>
        }
</table>*@

     <div>
         @foreach(var item in ViewBag.WritersWorks)
         {  
            string loginUser = users.Where(u => u.Id == item.UserId).First().LoginUser;
            string nameGenre = genres.Where(u => u.Id == item.GenreId).First().NameGenre;
            string titleWork = item.TitleWork;

             <div class="writers-works" style="margin-left:50px;">
                         <h4>@Html.ActionLink(titleWork, "WriterWorkPage", "WriterWork", new { id = item.Id }, null)</h4>
                         <p>@nameGenre</p>
                         <p>@loginUser</p>
                         <p>@item.PublicationDate.ToShortDateString()</p>
                         <div class="writer-work-text">@item.WriterWorkText</div>
                         @if (User.Identity.IsAuthenticated)
                         {
                             int currentUserId = users.Where(u => u.LoginUser == User.Identity.Name).First().Id;

                             if (item.UserId == currentUserId)
                             {
                                 <div>
                                     <button type="button">@Html.ActionLink("Редактировать произведение", "CreateAndEdit", "WriterWork", new { id = @item.Id }, null)</button>
                                     <button type="button">@Html.ActionLink("Удалить произведение", "Delete", "WriterWork", new { id = @item.Id }, null)</button>
                                 </div>
                             }
                         }
             </div>
         }
     </div>